//QueryDSL 
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'war'
	
}

group = 'com.'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	 
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

	// email
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework:spring-context-support:5.3.22'
	
	
	//querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
   	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
   	implementation "com.querydsl:querydsl-core:${queryDslVersion}"
   	
   	//jsoup
   	implementation 'org.jsoup:jsoup:1.14.2'

	//annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: queryDslVersion
   // annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: queryDslVersion, classifier: 'jpa'
    //annotationProcessor("javax.persistence:javax.persistence-api")
    //annotationProcessor("jakarta.annotation:jakarta.annotation-api")

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
	
	
	// 	* providedCompile : compile시에는 필요하지만, 배포시에는 제외될 dependency를 설정한다. (war plugin이 설정된 경우에만 사용 가능하다)
	//	* providedRuntime : runtime시에만 필요하고, 실행환경에서 제공되는 dependency를 설정한다. (war plugin이 설정된 경우에만 사용 가능하다)
	//
	//출처: https://netframework.tistory.com/entry/Gradle-정리-single-project [Programming is Fun:티스토리]
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}
//https://dingdingmin-back-end-developer.tistory.com/entry/Spring-Data-JPA-7-Querydsl-%EC%82%AC%EC%9A%A9-gradle-7x






//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
   jpa = true
   querydslSourcesDir = querydslDir
}
sourceSets {
   main.java.srcDir querydslDir
}


configurations {
   compileOnly {
      extendsFrom annotationProcessor
   }
   querydsl.extendsFrom compileClasspath
}

compileQuerydsl{
   options.annotationProcessorPath = configurations.querydsl
   if(file(querydslDir).exists()) delete(file(querydslDir))
}

//querydsl 추가 끝

//lombok 사용시 추가
project.afterEvaluate {
    project.tasks.compileQuerydsl.options.compilerArgs = [
            "-proc:only",
            "-processor", project.querydsl.processors() +
                    ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
    ]
}
/*

tasks.named('test') {
	useJUnitPlatform()
}
*/